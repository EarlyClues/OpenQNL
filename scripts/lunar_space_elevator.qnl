summon "Universal Free Realms Standard Protocols"
summon "PolicyGaruda"
summon "OpenQNL"

// API FOR TURNING ANY PLANETARY MOON INTO A LUNAR SPACE ELEVATOR SLASH
// ORBITAL RELAY STATION. 
// ATTACH TO ANY DOCKING PORT AVAILABLE AND BEGIN MESSAGE BROADCAST
// 
// (See sample below for implementation)
//
object Moon implements Listener {
  
  AVAILABLE_DOCKING_PORTS = [ L1, L2 ]
  
  DEFAULT_ATTRIBUTES = { 
    color: white,
    security_level: PG_SECURITY_MAXIMUM,
    port: AVAILABLE_DOCKING_PORTS[0]
  }
  
  public method initialize(opts=DEFAULT_ATTRIBUTES) {
    super(opts)
  }
  
  public method acceptIncomingMessage(receipient, message) { 
    if (securityCheck()) {
      relay_message(receipient, message);
    }
  }
  
  private # from prying eyes
  
  def relay_message(receipient, message) { 
    receipient.openConnectionToRecieve(message);
  }
}

/** EXAMPLE SCRIPT **/

// Instantiate a Moon object representation.
moon = Moon.initialize();
moon.doListen();

// Set oneself up as a response listener.
self.doListen();
self.attachDynamicQNLMethod( function openConnectionToRecieve(message) { 
  intuitive_message_stream(UFRSP_FUNDAMENTAL_KNOWLEDGE_BANC) << message;
});

//Broadcast your message.
moon.acceptIncomingMessage("Gordon Gilman, EXCEO", "Testing. Testing. Is this thing on?");


/** Moon info: http://en.wikipedia.org/wiki/Lunar_space_elevator **/
